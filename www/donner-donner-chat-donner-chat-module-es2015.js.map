{"version":3,"sources":["./src/app/donner/donner-chat/donner-chat.page.html","./src/app/donner/donner-chat/donner-chat.module.ts","./src/app/donner/donner-chat/donner-chat.page.scss","./src/app/donner/donner-chat/donner-chat.page.ts"],"names":[],"mappings":"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","file":"donner-donner-chat-donner-chat-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Message</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid>\\n    <ion-row *ngFor=\\\"let message of messages\\\">\\n      <ion-col size=\\\"9\\\" *ngIf=\\\"currentUser !== message?.sender\\\" class=\\\"message other-message\\\">\\n        <b>{{message?.sender}}</b><br>\\n        <span>{{message?.message}}</span>\\n        <div class=\\\"time\\\" text-right><br>\\n          {{message.createdAt | date:'short'}}</div>\\n      </ion-col>\\n\\n      <ion-col offset=\\\"3\\\" size=\\\"9\\\" *ngIf=\\\"currentUser === message.sender\\\" class=\\\"message my-message\\\">\\n        <b>{{message?.sender}}</b><br>\\n        <span>{{message?.message}}</span>\\n        <div class=\\\"time\\\" text-right><br>\\n          {{message.createdAt | date:'short'}}</div>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n<ion-footer>\\n  <ion-toolbar color=\\\"light\\\">\\n    <ion-row align-items-end no-padding>\\n      <ion-col size=\\\"10\\\">\\n        <textarea placeholder=\\\"Enter your message\\\" autosize [maxRows]=\\\"3\\\" [(ngModel)]=\\\"newMsg\\\" class=\\\"message-input\\\"></textarea>\\n      </ion-col>\\n      <ion-col size=\\\"2\\\">\\n        <ion-img (click)=\\\"sendMessage()\\\" style=\\\"width: 30px; height: 30px;\\\" src=\\\"/assets/send.svg\\\" alt=\\\"image\\\"></ion-img>\\n      </ion-col>\\n    </ion-row>\\n  </ion-toolbar>\\n</ion-footer>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DonnerChatPage } from './donner-chat.page';\nimport {AutosizeModule} from 'ngx-autosize';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DonnerChatPage\n  }\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        RouterModule.forChild(routes),\n        AutosizeModule\n    ],\n  declarations: [DonnerChatPage]\n})\nexport class DonnerChatPageModule {}\n","module.exports = \".message {\\n  padding: 10px;\\n  border-radius: 10px;\\n  margin-bottom: 5px;\\n  white-space: pre-wrap;\\n}\\n\\n.other-message {\\n  background: var(--ion-color-primary);\\n  color: ghostwhite;\\n}\\n\\n.my-message {\\n  background: var(--ion-color-secondary);\\n  color: white;\\n}\\n\\n.time {\\n  color: white;\\n  float: right;\\n}\\n\\n.message-input {\\n  width: 100%;\\n  resize: none;\\n  padding-left: 10px;\\n  padding-right: 10px;\\n  border: 4px solid var(--ion-color-medium);\\n  outline: none;\\n  border-radius: 15px;\\n}\\n\\n::-webkit-input-placeholder {\\n  padding-top: 10px;\\n  text-align: center;\\n}\\n\\n.msg-btn {\\n  --padding-start: 0.5em;\\n  --padding-end: 0.5em;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZG9ubmVyL2Rvbm5lci1jaGF0L0M6XFxVc2Vyc1xcVXNlclxcRG9jdW1lbnRzXFxHaXRIdWJcXGZvb2QtYXBwL3NyY1xcYXBwXFxkb25uZXJcXGRvbm5lci1jaGF0XFxkb25uZXItY2hhdC5wYWdlLnNjc3MiLCJzcmMvYXBwL2Rvbm5lci9kb25uZXItY2hhdC9kb25uZXItY2hhdC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxrQkFBQTtFQUNBLHFCQUFBO0FDQUY7O0FERUE7RUFDRSxvQ0FBQTtFQUNBLGlCQUFBO0FDQ0Y7O0FEQ0E7RUFDRSxzQ0FBQTtFQUNBLFlBQUE7QUNFRjs7QURDQTtFQUNFLFlBQUE7RUFDQSxZQUFBO0FDRUY7O0FEQUE7RUFFRSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0VBQ0EsbUJBQUE7RUFDQSx5Q0FBQTtFQUdBLGFBQUE7RUFDQSxtQkFBQTtBQ0FGOztBREdBO0VBQ0UsaUJBQUE7RUFDQSxrQkFBQTtBQ0FGOztBREVBO0VBQ0Usc0JBQUE7RUFDQSxvQkFBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvZG9ubmVyL2Rvbm5lci1jaGF0L2Rvbm5lci1jaGF0LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4ubWVzc2FnZXtcclxuICBwYWRkaW5nOiAxMHB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gIHdoaXRlLXNwYWNlOiBwcmUtd3JhcDtcclxufVxyXG4ub3RoZXItbWVzc2FnZXtcclxuICBiYWNrZ3JvdW5kOiB2YXIoLS1pb24tY29sb3ItcHJpbWFyeSk7XHJcbiAgY29sb3I6IGdob3N0d2hpdGU7XHJcbn1cclxuLm15LW1lc3NhZ2V7XHJcbiAgYmFja2dyb3VuZDogdmFyKC0taW9uLWNvbG9yLXNlY29uZGFyeSk7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG4udGltZXtcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgZmxvYXQ6IHJpZ2h0O1xyXG59XHJcbi5tZXNzYWdlLWlucHV0e1xyXG5cclxuICB3aWR0aDogMTAwJTtcclxuICByZXNpemU6IG5vbmU7XHJcbiAgcGFkZGluZy1sZWZ0OiAxMHB4O1xyXG4gIHBhZGRpbmctcmlnaHQ6IDEwcHg7XHJcbiAgYm9yZGVyOiA0cHggc29saWQgdmFyKC0taW9uLWNvbG9yLW1lZGl1bSk7XHJcbiAgLy8td2Via2l0LWJvcmRlci1yYWRpdXM6IDE1cHg7XHJcbiAgLy8tbW96LWJvcmRlci1yYWRpdXM6IDE1cHg7XHJcbiAgb3V0bGluZTogbm9uZTtcclxuICBib3JkZXItcmFkaXVzOiAxNXB4O1xyXG59XHJcblxyXG46Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xyXG4gIHBhZGRpbmctdG9wOiAxMHB4O1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG4ubXNnLWJ0bntcclxuICAtLXBhZGRpbmctc3RhcnQ6IDAuNWVtO1xyXG4gIC0tcGFkZGluZy1lbmQ6IDAuNWVtO1xyXG59XHJcbiIsIi5tZXNzYWdlIHtcbiAgcGFkZGluZzogMTBweDtcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xuICB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7XG59XG5cbi5vdGhlci1tZXNzYWdlIHtcbiAgYmFja2dyb3VuZDogdmFyKC0taW9uLWNvbG9yLXByaW1hcnkpO1xuICBjb2xvcjogZ2hvc3R3aGl0ZTtcbn1cblxuLm15LW1lc3NhZ2Uge1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1pb24tY29sb3Itc2Vjb25kYXJ5KTtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4udGltZSB7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgZmxvYXQ6IHJpZ2h0O1xufVxuXG4ubWVzc2FnZS1pbnB1dCB7XG4gIHdpZHRoOiAxMDAlO1xuICByZXNpemU6IG5vbmU7XG4gIHBhZGRpbmctbGVmdDogMTBweDtcbiAgcGFkZGluZy1yaWdodDogMTBweDtcbiAgYm9yZGVyOiA0cHggc29saWQgdmFyKC0taW9uLWNvbG9yLW1lZGl1bSk7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGJvcmRlci1yYWRpdXM6IDE1cHg7XG59XG5cbjo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIHBhZGRpbmctdG9wOiAxMHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5tc2ctYnRuIHtcbiAgLS1wYWRkaW5nLXN0YXJ0OiAwLjVlbTtcbiAgLS1wYWRkaW5nLWVuZDogMC41ZW07XG59Il19 */\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {AngularFireDatabase} from '@angular/fire/database';\nimport {IonContent} from '@ionic/angular';\nimport {HttpClient} from '@angular/common/http';\nimport {ListService} from '../../list.service';\n\n@Component({\n  selector: 'app-donner-chat',\n  templateUrl: './donner-chat.page.html',\n  styleUrls: ['./donner-chat.page.scss'],\n})\nexport class DonnerChatPage implements OnInit {\n\n  messages = [];\n  recivedData = [];\n  currentUser; user;\n  channel;\n  channelName;\n  newMsg: '';\n  objectOfChannel;\n  // charityHouse;\n  // @ts-ignore\n  @ViewChild(IonContent) content: IonContent;\n  constructor(public route: ActivatedRoute,\n              public http: HttpClient,\n              private service: ListService,\n              public db: AngularFireDatabase) {\n    this.loadchannelName();\n    console.log('channel Name', this.channel);\n    this.db.list(`/channels/${this.channel}`).valueChanges().subscribe( data => {\n      console.log('data', data);\n      this.recivedData = data;\n      this.messages = data;\n      // this.messages = this.recivedData.filter(x => x.channelName === this.channel);\n      console.log('messages after filter', this.messages);\n    });\n  }\n  ngOnInit() {\n  }\n\n  loadchannelName() {\n    this.channel = JSON.parse(localStorage.getItem('channelName'));\n    this.user = JSON.parse(localStorage.getItem('user'));\n    this.currentUser = this.user.user.user_name.toLowerCase(); // + ' ' + this.user.user.last_name.toLowerCase();\n    console.log('current user', this.currentUser);\n  }\n  sendMessage() {\n    const url = `${this.service.homeUrl}/channels/exist-or-not/${this.channel}`;\n    this.http.post(url, 1).subscribe(\n        data => {\n          console.log('I got this response -> ', data);\n        },\n        error => {\n          console.log('error', error);\n        });\n    this.db.list(`/channels/${this.channel}`).push({\n      sender: this.currentUser,\n      message: this.newMsg,\n      createdAt: new Date().getTime(),\n    });\n    this.newMsg = '';\n    setTimeout(() => {\n      this.content.scrollToBottom(10);\n    });\n  }\n}\n"],"sourceRoot":""}