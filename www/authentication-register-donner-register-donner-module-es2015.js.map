{"version":3,"sources":["./src/app/authentication/register-donner/register-donner.page.html","./src/app/authentication/register-donner/register-donner.module.ts","./src/app/authentication/register-donner/register-donner.page.scss","./src/app/authentication/register-donner/register-donner.page.ts"],"names":[],"mappings":"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","file":"authentication-register-donner-register-donner-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Sign Up</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"registerDonnerForm\\\">\\n    <ion-grid>\\n      <ion-row color=\\\"justify-content-center\\\">\\n        <ion-col class=\\\"ion-align-self-center\\\" size-md=\\\"6\\\" size-lg=\\\"5\\\" size-xs=\\\"12\\\">\\n          <div class=\\\"ion-text-center\\\">\\n            <h3>Enter Donner Details!</h3>\\n          </div>\\n          <div class=\\\"ion-padding\\\">\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Address</ion-label>\\n              <ion-input (focusout)=\\\"onFoucusOut()\\\" (keyup)=\\\"removeError()\\\" formControlName=\\\"address\\\"></ion-input>\\n            </ion-item>\\n            <div>\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"registerDonnerFormControl.address.touched && registerDonnerFormControl.address.errors?.required\\\">Address required.</span>\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"submitted && registerDonnerFormControl.address.errors?.required\\\">address required.</span>\\n            </div>\\n            <div *ngIf=\\\"addressVerification\\\">\\n              <span class=\\\"text-danger\\\">You can't enter only white space.</span>\\n            </div>\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Contact</ion-label>\\n              <ion-input (focus)=\\\"onFoucusOutContact()\\\" (keyup)=\\\"removeErrorContact()\\\" formControlName=\\\"contact\\\"></ion-input>\\n            </ion-item>\\n            <div>\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"registerDonnerFormControl.contact.touched && registerDonnerFormControl.contact.errors?.required\\\">Contact required.</span>\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"submitted && registerDonnerFormControl.contact.errors?.required\\\">Contact required.</span>\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"registerDonnerForm.get('contact').hasError('pattern')\\\">Enter Only digits for contact.</span>\\n            </div>\\n            <div *ngIf=\\\"contactEmptyCheck\\\">\\n              <span class=\\\"text-danger\\\">You can't enter only white space.</span>\\n            </div>\\n          </div>\\n          <div class=\\\"ion-padding\\\">\\n            <ion-button size=\\\"large\\\" [disabled]=\\\"registerDonnerForm.invalid\\\" (click)=\\\"registerDonner()\\\" color=\\\"primary\\\" type=\\\"submit\\\" expand=\\\"block\\\">Register</ion-button>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterDonnerPage } from './register-donner.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterDonnerPage\n  }\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        RouterModule.forChild(routes),\n        ReactiveFormsModule\n    ],\n  declarations: [RegisterDonnerPage]\n})\nexport class RegisterDonnerPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGhlbnRpY2F0aW9uL3JlZ2lzdGVyLWRvbm5lci9yZWdpc3Rlci1kb25uZXIucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {ListService} from '../../list.service';\n\n@Component({\n  selector: 'app-register-donner',\n  templateUrl: './register-donner.page.html',\n  styleUrls: ['./register-donner.page.scss'],\n})\nexport class RegisterDonnerPage implements OnInit {\n  private JSONObject;\n  registerDonnerForm: FormGroup;\n  today = new Date();\n  date;\n  obj;\n  user;\n  donner;\n  addressVerification = false;\n  contactEmptyCheck = false;\n  private loading: boolean;\n  constructor(private route: ActivatedRoute,\n              private http: HttpClient,\n              private formBuilder: FormBuilder,\n              private service: ListService,\n              private router: Router) {\n  }\n  data: Observable<any>;\n  charityHouse: any;\n  submitted: any;\n  ngOnInit() {\n    this.route.paramMap.subscribe(paramMap => {\n      this.obj = paramMap.get('first_name');\n      console.log('reciving data', this.obj);\n      this.user = '\"user\" : {\"first_name\" : \"' + paramMap.get('first_name') +\n          '\" , \"last_name\" : \"' + paramMap.get('last_name') +\n          '\" , \"email\" : \"' + paramMap.get('email') +\n          '\" , \"user_name\" : \"' + paramMap.get('user_name') +\n          '\" , \"password\" : \"' + paramMap.get('password') +\n          '\" , \"role\"  : \"' + paramMap.get('role') + '\"}';\n    });\n    this.formInitializer();\n  }\n\n  formInitializer() {\n    this.registerDonnerForm = this.formBuilder.group({\n      address: [null, [Validators.required]],\n      contact: [null, [Validators.required, Validators.pattern('[0-9 ]*')]]\n    });\n  }\n\n  get registerDonnerFormControl() {\n    return this.registerDonnerForm.controls;\n  }\n  registerDonner() {\n    this.submitted = true;\n    if (this.registerDonnerForm.valid) {\n      this.loading = true;\n      console.log('form Data', this.registerDonnerForm.value);\n      const formData = this.registerDonnerForm.value;\n      this.donner = '{\"address\" : \"' + formData.address +\n          '\", \\n\"contact\" : \"' + formData.contact +\n          '\", \\n' + this.user + ' }';\n      console.log('data before parsing', this.donner);\n      const completeDonner = JSON.parse(this.donner);\n      console.log('complete Donner', completeDonner);\n      this.saveHttpReq(completeDonner).subscribe(\n          data => {\n            alert('Please! check your email and verify your account.');\n            console.log('I got this response -> ', data);\n            this.router.navigate(['login']);\n          },\n          error => {\n            console.log('error', error);\n          }\n      );\n    }\n  }\n\n  saveHttpReq(dataObj): Observable<any> {\n    console.log('recieved data ', dataObj);\n    const url = `${this.service.homeUrl}/donners/newDonner`;\n    const test = this.http.post(url, dataObj);\n    this.loading = false;\n    return test;\n  }\n\n  onFoucusOut() {\n    const test = this.registerDonnerForm.value;\n    const item = test.address;\n    console.log('test', test);\n    console.log('address', item);\n    const str = '    ';\n    if (!str.replace(/\\s/g, '').length) {\n      // alert('str contains spaces.');\n    }\n    if ( item === '' || item == null) {\n      this.addressVerification = true;\n    }\n  }\n  removeError() {\n    this.addressVerification = false;\n  }\n\n  onFoucusOutContact() {\n    const test = this.registerDonnerForm.value;\n    const item = test.contact;\n    console.log('test', test);\n    console.log('contact', item);\n    const str = '    ';\n    if (!str.replace(/\\s/g, '').length) {\n      // alert('str contains spaces.');\n    }\n    if ( item === '' || item == null) {\n      this.contactEmptyCheck = true;\n    }\n  }\n  removeErrorContact() {\n    this.contactEmptyCheck = false;\n  }\n}\n"],"sourceRoot":""}