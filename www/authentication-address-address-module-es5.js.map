{"version":3,"sources":["./src/app/authentication/address/address.page.html","./src/app/authentication/address/address.module.ts","./src/app/authentication/address/address.page.scss","./src/app/authentication/address/address.page.ts"],"names":[],"mappings":"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","file":"authentication-address-address-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Sign Up</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"addressForm\\\">\\n    <ion-grid>\\n      <ion-row color=\\\"justify-content-center\\\">\\n        <ion-col class=\\\"ion-align-self-center\\\" size-md=\\\"6\\\" size-lg=\\\"5\\\" size-xs=\\\"12\\\">\\n          <div class=\\\"ion-text-center\\\">\\n            <h3>Enter Address Details</h3>\\n          </div>\\n          <div class=\\\"ion-padding\\\">\\n            <ion-item>\\n              <ion-input placeholder=\\\"Street address\\\" formControlName=\\\"streetAddress\\\"></ion-input>\\n            </ion-item>\\n            <div>\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"registerAddressFormControl.streetAddress.touched && registerAddressFormControl.streetAddress.errors?.required\\\">street Address required.</span>\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"submitted && registerAddressFormControl.streetAddress.errors?.required\\\">street Address required.</span>\\n            </div>\\n            <ion-item>\\n              <ion-input placeholder=\\\"City\\\" formControlName=\\\"city\\\"></ion-input>\\n            </ion-item>\\n            <div>\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"registerAddressFormControl.city.touched && registerAddressFormControl.city.errors?.required\\\">city required.</span>\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"addressForm.get('city').hasError('pattern')\\\">Enter only digits</span>\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"submitted && registerAddressFormControl.city.errors?.required\\\">city required.</span>\\n            </div>\\n            <ion-item>\\n              <ion-input placeholder=\\\"zip Code\\\" formControlName=\\\"zipCode\\\"></ion-input>\\n            </ion-item>\\n            <div>\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"registerAddressFormControl.zipCode.touched && registerAddressFormControl.zipCode.errors?.required\\\">zip Code required.</span>\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"addressForm.get('zipCode').hasError('pattern')\\\">Enter only digits</span>\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"submitted && registerAddressFormControl.zipCode.errors?.required\\\">zip Code required.</span>\\n            </div>\\n            <ion-item>\\n              <ion-input placeholder=\\\"state\\\" formControlName=\\\"state\\\"></ion-input>\\n            </ion-item>\\n            <div>\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"registerAddressFormControl.state.touched && registerAddressFormControl.state.errors?.required\\\">state required.</span>\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"addressForm.get('state').hasError('pattern')\\\">Enter only Alphabets</span>\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"submitted && registerAddressFormControl.state.errors?.required\\\">state required.</span>\\n            </div>\\n            <ion-item>\\n              <ion-input placeholder=\\\"Country\\\" formControlName=\\\"country\\\"></ion-input>\\n            </ion-item>\\n            <div>\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"registerAddressFormControl.country.touched && registerAddressFormControl.country.errors?.required\\\">country required.</span>\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"addressForm.get('country').hasError('pattern')\\\">Enter only Alphabets</span>\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"submitted && registerAddressFormControl.country.errors?.required\\\">country required.</span>\\n            </div>\\n          </div>\\n          <div class=\\\"ion-padding\\\">\\n            <ion-button size=\\\"large\\\"(click)=\\\"registerCharityHouse()\\\" color=\\\"primary\\\" type=\\\"submit\\\" expand=\\\"block\\\">Register&nbsp;&nbsp;&nbsp;<ion-spinner name=\\\"lines\\\" *ngIf=\\\"loading\\\"></ion-spinner></ion-button>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddressPage } from './address.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddressPage\n  }\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        RouterModule.forChild(routes),\n        ReactiveFormsModule\n    ],\n  declarations: [AddressPage]\n})\nexport class AddressPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGhlbnRpY2F0aW9uL2FkZHJlc3MvYWRkcmVzcy5wYWdlLnNjc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {HttpClient} from '@angular/common/http';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Observable} from 'rxjs';\nimport {ListService} from '../../list.service';\n\n@Component({\n    selector: 'app-address',\n    templateUrl: './address.page.html',\n    styleUrls: ['./address.page.scss'],\n})\nexport class AddressPage implements OnInit {\n\n    addressForm: FormGroup;\n    charity;\n    loading: boolean;\n    submitted: any;\n    constructor(private route: ActivatedRoute,\n                private router: Router,\n                private http: HttpClient,\n                private service: ListService,\n                private formBuilder: FormBuilder\n    ) {\n    }\n\n    obj;\n    user;\n\n    ngOnInit() {\n        this.route.paramMap.subscribe(paramMap => {\n            this.obj = paramMap.get('id');\n            console.log('reciving data', this.obj);\n        });\n        this.formInitializer();\n    }\n\n    formInitializer() {\n        this.addressForm = this.formBuilder.group({\n            streetAddress: [null, [Validators.required]],\n            city: [null, [Validators.required, Validators.pattern('[a-zA-Z ]*')]],\n            zipCode: [null, [Validators.required, Validators.pattern('[0-9]*')]],\n            state: [null, [Validators.required, Validators.pattern('[a-zA-Z]*')]],\n            country: [null, [Validators.required, Validators.pattern('[a-zA-Z ]*')]]\n        });\n    }\n\n    get registerAddressFormControl() {\n        return this.addressForm.controls;\n    }\n\n    registerCharityHouse() {\n        this.submitted = true;\n        this.loading = true;\n        if (this.addressForm.valid) {\n            console.log('formData', this.addressForm.value);\n            const formData = this.addressForm.value;\n            this.charity = '' + this.obj + '\"address\" : {\"streetAddress\" : \"' + formData.streetAddress +\n                '\" , \"city\" : \"' + formData.city +\n                '\" , \"zipCode\" : \"' + formData.zipCode +\n                '\" , \"state\" : \"' + formData.state +\n                '\" , \"country\" : \"' + formData.country +\n                '\" } }';\n            console.log('data befor parsing', this.charity);\n            const completeCharityHouse = JSON.parse(this.charity);\n            console.log('complete charity house', completeCharityHouse);\n            this.saveHttpReq(completeCharityHouse).subscribe(\n                data => {\n                    console.log('I got this response -> ', data);\n                    this.loading = false;\n                    alert('Please! check your email and verify your account.');\n                    this.router.navigate(['login']);\n                },\n                error => {\n                    console.log('error', error);\n                }\n            );\n        }\n        this.loading = false;\n    }\n\n    saveHttpReq(dataObj): Observable<any> {\n        console.log('recieved data ', dataObj);\n        const url = `${this.service.homeUrl}/charityHouses/newCharityHouse`;\n        const test = this.http.post(url, dataObj);\n        this.loading = false;\n        return test;\n    }\n}\n"],"sourceRoot":""}