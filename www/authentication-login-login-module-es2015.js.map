{"version":3,"sources":["./src/app/authentication/login/login.page.html","./src/app/authentication/login/login.module.ts","./src/app/authentication/login/login.page.scss","./src/app/authentication/login/login.page.ts"],"names":[],"mappings":"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","file":"authentication-login-login-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title>Login</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"loginForm\\\" >\\n    <ion-grid>\\n      <ion-row color=\\\"justify-content-center\\\">\\n        <ion-col class=\\\"ion-align-self-center\\\" size-md=\\\"6\\\" size-lg=\\\"5\\\" size-xs=\\\"12\\\">\\n          <div class=\\\"ion-text-center\\\">\\n            <h3>Login to your account!</h3>\\n          </div>\\n          <div class=\\\"ion-padding\\\">\\n            <ion-item>\\n              <ion-input name=\\\"username\\\" formControlName=\\\"email\\\" type=\\\"text\\\" placeholder=\\\"Email\\\"></ion-input>\\n            </ion-item>\\n            <span class=\\\"error-message\\\" *ngIf=\\\"isSubmitted && errorControl.email.errors?.required\\\">email is required.</span>\\n            <ion-item>\\n              <ion-input placeholder=\\\"Password\\\" formControlName=\\\"password\\\" [type]=\\\"passwordType\\\" clearOnEdit=\\\"false\\\"></ion-input>\\n              <ion-icon item-end [name]=\\\"passwordIcon\\\" class=\\\"passwordIcon\\\" (click)='hideShowPassword()'></ion-icon>\\n            </ion-item>\\n            <span class=\\\"error-message\\\" *ngIf=\\\"isSubmitted && errorControl.password.errors?.required\\\">Password is required.</span>\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">User Role</ion-label>\\n              <ion-select value=\\\"Donner\\\" formControlName=\\\"role\\\" placeholder=\\\"--Select--\\\" okText=\\\"Okay\\\" cancelText=\\\"Dismiss\\\">\\n                <ion-select-option value=\\\"admin\\\">Admin</ion-select-option>\\n                <ion-select-option value=\\\"donner\\\">Donner</ion-select-option>\\n                <ion-select-option value=\\\"charity house\\\">Charity House</ion-select-option>\\n              </ion-select>\\n            </ion-item>\\n              <span class=\\\"error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.role.errors?.required\\\">Please select user role.</span>\\n          </div>\\n          <div class=\\\"ion-padding\\\">\\n            <ion-button shape=\\\"round\\\" size=\\\"large\\\" (click)=\\\"login()\\\" color=\\\"primary\\\" type=\\\"submit\\\" expand=\\\"block\\\">Login</ion-button>\\n          </div>\\n          <div>\\n            <ion-label *ngIf=\\\"test\\\">Invalid email OR password. Please Enter correct details.</ion-label>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n  <ion-text (click)=\\\"forgotPassword()\\\" color=\\\"danger\\\">\\n    <h4 style=\\\"padding-left: 30px\\\">Forgot Password?</h4>\\n  </ion-text>\\n  <ion-label>\\n  </ion-label>\\n  <ion-footer style=\\\"padding-top: 40px\\\">\\n    <ion-button (click)=\\\"registerUser()\\\" size=\\\"large\\\" expand=\\\"block\\\" color=\\\"secondary\\\">\\n      <ion-img class=\\\"register-icon\\\" src=\\\"/assets/person-add-sharp.svg\\\"></ion-img>\\n      REGISTER A NEW USER</ion-button>\\n  </ion-footer>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        RouterModule.forChild(routes),\n        ReactiveFormsModule\n    ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \".passwordIcon {\\n  font-size: 2rem !important;\\n  position: relative !important;\\n  top: 0px !important;\\n  margin: 0 auto !important;\\n}\\n\\n.register-icon {\\n  width: 35px;\\n  height: 35px;\\n  padding-right: 5px;\\n}\\n\\n.forgot-password {\\n  padding-left: 30px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aGVudGljYXRpb24vbG9naW4vQzpcXFVzZXJzXFxVc2VyXFxEb2N1bWVudHNcXEdpdEh1YlxcZm9vZC1hcHAvc3JjXFxhcHBcXGF1dGhlbnRpY2F0aW9uXFxsb2dpblxcbG9naW4ucGFnZS5zY3NzIiwic3JjL2FwcC9hdXRoZW50aWNhdGlvbi9sb2dpbi9sb2dpbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSwwQkFBQTtFQUNBLDZCQUFBO0VBQ0EsbUJBQUE7RUFDQSx5QkFBQTtBQ0NGOztBRENBO0VBQ0UsV0FBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtBQ0VGOztBREFBO0VBQ0Usa0JBQUE7QUNHRiIsImZpbGUiOiJzcmMvYXBwL2F1dGhlbnRpY2F0aW9uL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wYXNzd29yZEljb257XHJcbiAgZm9udC1zaXplOjJyZW0gIWltcG9ydGFudDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmUgIWltcG9ydGFudDtcclxuICB0b3A6IDBweCAhaW1wb3J0YW50O1xyXG4gIG1hcmdpbjogMCBhdXRvICFpbXBvcnRhbnQ7XHJcbn1cclxuLnJlZ2lzdGVyLWljb257XHJcbiAgd2lkdGg6IDM1cHg7XHJcbiAgaGVpZ2h0OiAzNXB4O1xyXG4gIHBhZGRpbmctcmlnaHQ6IDVweDtcclxufVxyXG4uZm9yZ290LXBhc3N3b3Jke1xyXG4gIHBhZGRpbmctbGVmdDogMzBweDtcclxuICAvL2NvbG9yOiBkYXJrcmVkO1xyXG4gIC8vdGV4dC11bmRlcmxpbmU6ICMwMDcwNjk7XHJcbn1cclxuIiwiLnBhc3N3b3JkSWNvbiB7XG4gIGZvbnQtc2l6ZTogMnJlbSAhaW1wb3J0YW50O1xuICBwb3NpdGlvbjogcmVsYXRpdmUgIWltcG9ydGFudDtcbiAgdG9wOiAwcHggIWltcG9ydGFudDtcbiAgbWFyZ2luOiAwIGF1dG8gIWltcG9ydGFudDtcbn1cblxuLnJlZ2lzdGVyLWljb24ge1xuICB3aWR0aDogMzVweDtcbiAgaGVpZ2h0OiAzNXB4O1xuICBwYWRkaW5nLXJpZ2h0OiA1cHg7XG59XG5cbi5mb3Jnb3QtcGFzc3dvcmQge1xuICBwYWRkaW5nLWxlZnQ6IDMwcHg7XG59Il19 */\"","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {ListService} from '../../list.service';\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.page.html',\n    styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n    constructor(private route: ActivatedRoute,\n                private http: HttpClient,\n                private formBuilder: FormBuilder,\n                private service: ListService,\n                private router: Router) {\n    }\n\n    test = false;\n    loginForm: FormGroup;\n    data: Observable<any>;\n    passwordType = 'password';\n    passwordIcon = 'eye-off';\n    isSubmitted = false;\n    private userButDisAproved: boolean;\n    appPages = [];\n    ngOnInit() {\n        this.formInitializer();\n    }\n\n    hideShowPassword() {\n        this.passwordType = this.passwordType === 'text' ? 'password' : 'text';\n        this.passwordIcon = this.passwordIcon === 'eye-off' ? 'eye' : 'eye-off';\n    }\n\n    formInitializer() {\n        this.loginForm = this.formBuilder.group({\n            email: [null, [Validators.required]],\n            password: [null, [Validators.required]],\n            role: [null, [Validators.required]]\n        });\n    }\n\n    login() {\n        this.isSubmitted = true;\n        if (this.loginForm.valid) {\n            const loginData = this.loginForm.value;\n            this.saveHttpReq(loginData).subscribe(d => {\n                    console.log('I got this response -> ', d);\n                    console.log('data.emailStatus', d.emailStatus);\n                    console.log('response', d);\n                    if (d.emailStatus && d.loginStatus && d.applicationStatus === 'approved' && d.role != null) {\n                        if (d.role === 'donner') {\n                            this.appPages = [{ title: 'Home', url: '/home', icon: 'home' },\n                                { title: 'charity Houses', url: '/charityList', icon: 'list', },\n                                { title: 'Setting', url: '/setting', icon: 'settings'}];\n                            this.service.setRole(loginData.role);\n                            console.log('donner coming from API', d.donner);\n                            localStorage.setItem('donner', JSON.stringify(d.donner));\n                            localStorage.setItem('appPages', JSON.stringify(this.appPages));\n                            localStorage.setItem('role', loginData.role); // store role in local storage\n                            this.service.changeMessage({role: loginData.role});\n                            this.router.navigate(['home']);\n                        }\n                        if (d.role === 'charity house') {\n                            this.appPages = [{ title: 'Home', url: '/home', icon: 'home' },\n                                { title: 'Donner List', url: '/donner-list', icon: 'list', },\n                                { title: 'Setting', url: '/setting', icon: 'settings'}];\n                            this.service.setRole(loginData.role);\n                            localStorage.setItem('appPages', JSON.stringify(this.appPages));\n                            localStorage.setItem('charity house', JSON.stringify(d.charityHouse));\n                            localStorage.setItem('role', loginData.role); // store role in local storage\n                            this.service.changeMessage({role: loginData.role});\n                            this.router.navigate(['home']);\n                        }\n                        if (d.role === 'admin') {\n                            this.appPages = [{ title: 'Home', url: '/home', icon: 'home' },\n                                { title: 'Users', url: '/list', icon: 'list', },\n                                { title: 'Setting', url: '/setting', icon: 'settings'}];\n                            this.service.setRole(loginData.role);\n                            localStorage.setItem('adminUser', JSON.stringify(d.user));\n                            localStorage.setItem('appPages', JSON.stringify(this.appPages));\n                            localStorage.setItem('role', loginData.role); // store role in local storage\n                            this.service.changeMessage({role: loginData.role});\n                            this.router.navigate(['home']);\n                        }\n                        // this.service.addUser(d.userID);\n                        // this.router.navigate(['home']);\n                    } else if (d.emailStatus && d.loginStatus && d.applicationStatus === 'approved' && d.role === null) {\n                        alert('Please select correct role.');\n                    } else if (d.emailStatus && d.loginStatus && d.applicationStatus === null && d.role === loginData.role) {\n                        alert('Your email and password is correct but Application status is disapproved. ' +\n                            'Now you hve to check confirmation Email and approve your application status. Thank you!');\n                    } else if (d.emailStatus || d.loginStatus) {\n                        alert('Invalid Email, password. Try again latter !');\n                    } else if (d.emailStatus === false) {\n                        alert('Sorry ! User with that email, password does not exist');\n                    }\n                    // this.router.navigate(['home']);\n                },\n                error => {\n                    alert(':( OOPS ! Server Error.');\n                    console.log('error', error);\n                }\n            );\n            // if (loginData.role === 'donner') {\n            //     this.service.setRole(loginData.role);\n            //     localStorage.setItem('role', loginData.role); // store role in local storage\n            //     this.service.changeMessage({role: loginData.role});\n            //     // this.service.addDonner(loginData);\n            // }\n            // if (loginData.role === 'charity house') {\n            //     this.service.addUser(4);\n            //     this.service.setRole(loginData.role);\n            //     localStorage.setItem('role', loginData.role); // store role in local storage\n            //     this.service.changeMessage({role: loginData.role});\n            //     this.router.navigate(['home']);\n            // }\n            // if (loginData.role === 'admin') {\n            //     this.service.addUser(4);\n            //     this.service.setRole(loginData.role);\n            //     localStorage.setItem('role', loginData.role); // store role in local storage\n            //     this.service.changeMessage({role: loginData.role});\n            //     this.router.navigate(['home']);\n            // }\n        } else {\n            return false;\n            // comment\n        }\n    }\n\n    get errorControl() {\n        return this.loginForm.controls;\n    }\n\n    saveHttpReq(dataObj): Observable<any> {\n        console.log('recieved data ', dataObj);\n        const url = `${this.service.homeUrl}/users/login`;\n        console.log('url', url);\n        const test = this.http.post(url, dataObj);\n        return test;\n    }\n\n    registerUser() {\n        this.router.navigate(['register']);\n    }\n\n    forgotPassword() {\n        this.router.navigate(['forgot-password']);\n    }\n}\n"],"sourceRoot":""}